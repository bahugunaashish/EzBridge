--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) CONSTRAINTS handler (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/617.htm)
	Determines how the constraint equations are enforced in the analysis, how it handles the boundary conditions/imposed displacements.
	
         Plain Constraints 		-- 	Removes constrained degrees of freedom from the system of equations (do not use if rigid link or diaphragm exists)
         Lagrange Multipliers 	-- 	Uses the method of Lagrange multipliers to enforce constraints 
         Penalty Method 		-- 	Uses penalty numbers to enforce constraints 
         Transformation Method 	-- 	Performs a condensation of constrained degrees of freedom 
		 
		 NOTES for Transformation Method:
			The single-point constraints when using the transformation method are done directly. 
			The matrix equation is not manipulated to enforce them, rather the trial displacements are set directly at the nodes at the start of each analysis step.
			Great care must be taken when multiple constraints are being enforced as the transformation method does not follow constraints:
			1) If a node is fixed, constrain it with the fix command and not equalDOF or other type of constraint.
			2) If multiple nodes are constrained, make sure that the retained node is not constrained in any other constraint.
			And remember if a node is constrained to multiple nodes in your model it probably means you have messed up.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2) DOF NUMBERER (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/366.htm)
	Determines the mapping between equation numbers and degrees-of-freedom.
	
         Plain 	-- Uses the numbering provided by the user 
         RCM 	-- Renumbers the DOF to minimize the matrix band-width using the Reverse Cuthill-McKee algorithm 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3) SYSTEM (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/371.htm)
	Linear Equation Solvers (how to store and solve the system of equations in the analysis)
	Provide the solution of the linear system of equations Ku = P. Each solver is tailored to a specific matrix topology. 
  
         ProfileSPD 	-- Direct profile solver for symmetric positive definite matrices 
         BandGeneral 	-- Direct solver for banded unsymmetric matrices 
         BandSPD 		-- Direct solver for banded symmetric positive definite matrices 
         SparseGeneral 	-- Direct solver for unsymmetric sparse matrices (-piv option)
         SparseSPD 		-- Direct solver for symmetric sparse matrices 
         UmfPack 		-- Direct UmfPack solver for unsymmetric matrices 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4) Convergence TEST (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/360.htm)
	Accept the current state of the domain as being on the converged solution path 
	Determine if convergence has been achieved at the end of an iteration step
	
         NormUnbalance 				-- Specifies a tolerance on the norm of the unbalanced load at the current iteration (Do not use with Lagrange)
         NormDispIncr 				-- Specifies a tolerance on the norm of the displacement increments at the current iteration 
         EnergyIncr					-- Specifies a tolerance on the inner product of the unbalanced load and displacement increments at the current iteration (Do not use with Penalty)
         RelativeNormUnbalance 		-- (Do not use with Penalty)
         RelativeNormDispIncr 		-- (Do not use with Lagrange)
		 RelativeTotalNormDispIncr	-- (Do not use with Lagrange)
         RelativeEnergyIncr 		-- (Do not use with Penalty)
		 FixedNumIter				--

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5) Solution ALGORITHM (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/682.htm)
	Iterate from the last time step to the current 
         Linear 			-- Uses the solution at the first iteration and continues 
         Newton 			-- Uses the tangent at the current iteration to iterate to convergence 
         ModifiedNewton 	-- Uses the tangent at the first iteration to iterate to convergence 
         NewtonLineSearch 	-- 
         KrylovNewton 		-- 
         BFGS 				-- 
         Broyden 			-- 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

6) Static INTEGRATOR (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/689.htm)
	Determine the next time step for an analysis.
	
         LoadControl 							-- Specifies the incremental load factor to be applied to the loads in the domain 
         DisplacementControl 					-- Specifies the incremental displacement at a specified DOF in the domain 
         Minimum Unbalanced Displacement Norm 	-- Specifies the incremental load factor such that the residual displacement norm in minimized 
         Arc Length 							-- Specifies the incremental arc-length of the load-displacement path 
		 
6) Transient INTEGRATOR (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/689.htm)
	Determine the next time step for an analysis including inertial effects.
	
         Newmark 			-- The two parameter time-stepping method developed by Newmark 
         HHT 				-- The three parameter Hilbert-Hughes-Taylor time-stepping method 
         Central Difference -- Approximates velocity and acceleration by centered finite differences of displacement 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

7) ANALYSIS (http://opensees.berkeley.edu/OpenSees/manuals/usermanual/324.htm)
	Defines what type of analysis is to be performed.
	There are convergence problems with the Transient Analysis object at a peak or when the time step is too small. The time step in the output is also variable.
	
         Static Analysis 			-- solves the KU=R problem, without the mass or damping matrices. 
         Transient Analysis 		-- solves the time-dependent analysis. The time step in this type of analysis is constant. The time step in the output is also constant. 
         variableTransient Analysis -- performs the same analysis type as the Transient Analysis object. The time step, however, is variable. This method is used when 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

8) DAMPING (https://portwooddigital.com/2019/09/12/be-careful-with-modal-damping/)
	rayleigh: Rayleigh damping
	modalDamping: Modal damping